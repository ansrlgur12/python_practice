import numpy as np

"""
    머신러닝을 구현하기 위해 방대한 양의 데이터를 처리하는 데 Python 라이브러리 중에 NumPy를 사용하면 편리하다.
    배열의 연산에 최적화되어 있어 데이터를 분석할 떄 기본적으로 사용하는 라이브러리이다.

    넘파이에서 사용하는 데이터의 구조는 개수나 형태에 따라 스칼라, 벡터, 행렬, 텐서로 표현된다.

    * 스칼라
        - 한 개의 숫자로 이루어진 데이터
        ex ) 24

    * 벡터
        - 여러 개의 숫자로 이루어진 1D 데이터
        ex ) [1, 2, 3, 4, 5] - 행벡터
        - 세로로 있으면 열벡터
        
    * 행렬
        - 벡터의 집합. 1개 이상의 행과 열로 구성된 2차원 배열이다.


    * 텐서
        - 행렬의 집합이며, 3차원 이상의 배열이다.


        
    ---- 사용법 ----


    # 넘파이 라이브러리를 불러와 np라는 별명으로 사용
    import numpy as np


    ## array()
    - 넘파이의 배열 생성 함수

    예시 )
    # 행 벡터 생성    
        np_test = np.array([60, 70, 12])
        - 출력 결과 : [60 70 12]


    # 열 벡터 생성
        np_test2 = np.array([[60], [70], [12]])
        - 출력 결과 : 
        [[60] 
         [70] 
         [12]]

    # 행렬 생성

        np_test3 = np.array([[1,2], [3,4], [5,6]])
        - 출력 결과 :
        [[1 2] 
         [3 4] 
         [5 6]]

         



    ## arange()
    - arange() 를 사용하여 배열의 크기를 지정하면 지정한 범위의 정숫값을 갖는 1차원 배열을 생성한다.

    
    예시 )
        - np_test4 = np.arange(1, 6)
        - 출력 결과 : [1 2 3 4 5]

"""

np_test = np.array([60, 70, 12])
np_test2 = np.array([[60], [70], [12]])
np_test3 = np.array([[1,2], [3,4], [5,6]])
np_test4 = np.arange(1, 6)

print(np_test4)
