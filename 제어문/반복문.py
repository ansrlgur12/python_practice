'''

반복문

한개의 명령문을 여러 번 반복해서 실행해야 할 때 사용.

명령문을 반복하여 실행하는 구조를 반복 구조 라고하고, 
~회 반복, ~할 때 까지 반복, 무한 반복 같은 명령문이 있다.


### for 문

특정한 (지정된) 범위를 반복한다.

작성할 때는, 선택문과 마찬가지로 뒤에 콜론(:)이 붙고, 내부 명령문은 들여쓰기로 작성한다.

예시) 
for 변수 in 리스트 :
    명령문

||

for i in range(start, stop, step) :
    명령문

리스트의 모든 요소를 순회하며 명령문의 내용을 수행할 때는 첫번째 for문을 사용하고,
반복의 범위를 지정하여 사용할 땐 두번째 for문을 사용한다.


리스트를 for문을 사용해서 출력

예시)

family = ['아빠', '엄마', '나', '동생']

for i in family:
    print(i)

# 결과
아빠
엄마
나
동생



for i in range() : range함수 내부에 그냥 상수 하나만 적용한다면, 0부터 해당 상수 - 1번 반복한다.

예시)
for i in range(5):
    print(i)

# 결과 
0
1
2
3
4

거꾸로 순회하려면 다음과 같이 작성한다.

예시)
for i in range(4, -1, -1):
    print(i)

# 결과
4
3
2
1
0


### while 문

for문이 특정한 범위를 반복하는 반복문이였다면,
while문은 특정한 조건이 성립될 때 까지 반복하는 반복문이다.
구조는 다음과 같다.

while 조건:
    명령문


무한 반복을 만드는 while문

예시)
while True:
    명령문


위와 같이 작성하면 저 while문은 평생 돈다.


위 while 문을 종료시키려면 break를 걸어야한다.
보통 if문과 같이 쓴다.

예시)
while True:
    if 조건 :
        break
    명령문

이렇게 while문을 작성해두면 if 조건에 걸릴 떄, while문이 종료된다.

if 조건문 내부에 break 말고 continue 를 적을 수 도 있다.
continue는 해당 조건을 만족했을 때, 아래 명령문을 실행하는게 아닌 반복문으로 돌아간다.




'''

### 예제 1. 사용자가 입력한 단수의 구구단을 출력 ----------------------------------------------------------------

# while True:

#     user_input = int(input('구구단 단수를 입력하세요(0 입력시 종료) : '))

#     if user_input == 0:
#         print('구구단 출력이 종료되었습니다.')
#         break
    
#     for i in range(1, 10) :
#         print(f'{user_input} x {i} = {user_input * i}')
    
#     print('--------------------------------------------------------')

# ### 예제 2. 1 ~ 50 까지의 자연수 중에서 3의배수 또는 7의 배수를 출력해봅시다. ----------------------------------------------------------------

# ## for 문으로
# for i in range(1, 51) :
#     if i % 3 == 0 or i % 7 == 0 :
#         print(i)

## while 문으로

# num = 0
# while num < 50 :
#     num = num + 1
#     if num % 3 != 0 and num % 7 != 0 :
#         continue
#     print(num)


### 실습 문제 1. ----------------------------------------------------------------

# for i in range(2, 10):
#     for j in range(1, 10):
#         print(f'{i} x {j} = {i * j}')
#     print('----------------------------------------')



### 실습 문제 2. ----------------------------------------------------------------

num = 0
num_sum = 0

while True :
    num += 1
    if num == 101 :
        break
    
    if num % 2 != 0 :
        continue

    num_sum += num
print(num_sum)

